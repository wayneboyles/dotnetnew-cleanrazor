{
  "$schema": "http://json.schemastore.org/template",
  "author": "Wayne Boyles",
  "classifications": ["ASP.NET Core", "Core", "MVC", "Template", "Web"],
  "tags": {
    "language": "C#",
    "type": "solution"
  },
  "identity": "Boyles.CleanAspNetCore.Template",
  "name": "ASP.NET Core Web App (Clean)",
  "shortName": ["cleanwebapp", "cleanrazor"],
  "sourceName": "CleanRazor",
  "preferNameDirectory": true,
  "defaultName": "CleanRazor",
  "primaryOutputs": [
    {
      "path": "CleanRazor.sln"
    }
  ],
  "guids": [
    "09390E24-5DA9-4E29-B997-E73FEA72B90B",
    "8955C249-D2BD-43AF-88F2-C104723ADD3C",
    "27FAAA43-6A95-412A-8620-AA32CBA19EF3",
    "1478908A-AB1B-43B9-B93F-3C36CA64E26A",
    "E1ECB327-810A-452F-8890-327888CFE232",
    "68313D34-2629-4833-A017-4B37A1ECFEFC"
  ],
  "symbols": {
    "skipRestore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "If specified, skips the automatic restore of the project on create.",
      "defaultValue": "false"
    },

    "logging": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "None",
          "description": "No Logging"
        },
        {
          "choice": "Serilog",
          "description": "Logging with Serilog"
        }
      ],
      "defaultValue": "Serilog",
      "description": "The type of logging to use"
    },

    "SerilogLogging": {
      "type": "computed",
      "value": "(logging == \"Serilog\")"
    },

    "database": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "LocalDB",
          "description": "Use LocalDB as the database",
          "displayName": "LocalDB"
        },
        {
          "choice": "SQL",
          "description": "Use MS SQL Server as the database",
          "displayName": "SQL Server"
        },
        {
          "choice": "PGSQL",
          "description": "Use PostgreSQL Server as the database",
          "displayName": "PostgreSQL"
        }
      ]
    },

    "UseLocalDB": {
      "type": "computed",
      "value": "(database == \"LocalDB\")"
    },

    "UseSqlServer": {
      "type": "computed",
      "value": "(database == \"SQL\")"
    },

    "UsePostgreSQL": {
      "type": "computed",
      "value": "(database == \"PGSQL\")"
    },

    "ConnectionString": {
      "type": "generated",
      "generator": "switch",
      "replaces": "#TheDefaultConnectionString#",
      "parameters": {
        "evaluator": "C++",
        "cases": [
          {
            "condition": "(UseLocalDB)",
            "value": "Data Source=App.db"
          },
          {
            "condition": "(UseSqlServer)",
            "value": "Server=localhost;Database=MyDatabase;Integrated_Security=True;TrustServerCertificate=True"
          },
          {
            "condition": "(UsePostgreSQL)",
            "value": "Host=myserver;Username=mylogin;Password=mypass;Database=mydatabase"
          }
        ]
      }
    },

    "kestrelHttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the HTTP endpoint in launchSettings.json."
    },

    "kestrelHttpPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 5000,
        "high": 5300
      }
    },

    "kestrelHttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "kestrelHttpPort",
        "fallbackVariableName": "kestrelHttpPortGenerated"
      },
      "replaces": "5000"
    },

    "kestrelHttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the HTTPS endpoint in launchSettings.json. This option is only applicable when the parameter no-https is not used (no-https will be ignored if either IndividualB2C or OrganizationalAuth is used)."
    },

    "kestrelHttpsPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 7000,
        "high": 7300
      }
    },

    "kestrelHttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "kestrelHttpsPort",
        "fallbackVariableName": "kestrelHttpsPortGenerated"
      },
      "replaces": "5001"
    },

    "iisHttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the IIS Express HTTP endpoint in launchSettings.json."
    },

    "iisHttpPortGenerated": {
      "type": "generated",
      "generator": "port"
    },

    "iisHttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "iisHttpPort",
        "fallbackVariableName": "iisHttpPortGenerated"
      },
      "replaces": "8080"
    },

    "iisHttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the IIS Express HTTPS endpoint in launchSettings.json. This option is only applicable when the parameter no-https is not used (no-https will be ignored if either IndividualB2C or OrganizationalAuth is used)."
    },

    "iisHttpsPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 44300,
        "high": 44399
      }
    },

    "iisHttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "iisHttpsPort",
        "fallbackVariableName": "iisHttpsPortGenerated"
      },
      "replaces": "44300"
    },

    "RequiresHttps": {
      "type": "computed",
      "value": "(OrganizationalAuth || IndividualB2CAuth)"
    },

    "HasHttpProfile": {
      "type": "computed",
      "value": "(!RequiresHttps)"
    },

    "HasHttpsProfile": {
      "type": "computed",
      "value": "(RequiresHttps || !NoHttps)"
    }
  },
  "sources": [
    {
      "modifiers": [
        {
          "exclude": [".vs/**", ".template_config/**"]
        },
        {
          "condition": "(!SerilogLogging)",
          "exclude": ["CleanRazor.Web/Logging.cs"]
        }
      ]
    }
  ],
  "postActions": [
    {
      "id": "restore",
      "condition": "(!skipRestore)",
      "description": "Restore NuGet packages required by this project.",
      "manualInstructions": [
        {
          "text": "Run 'dotnet restore'"
        }
      ],
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true
    }
  ]
}
